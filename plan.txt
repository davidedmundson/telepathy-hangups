Plan of action:

Structure

setup.py
telepathy-hangups (executable)
TelepathyPython (stripped down version of Tp-python)
TelepathyHangups
.service
.manager

TelepathyHangups

ConnectionManager (created by main app)
Protocol (static)
Auth (wraps a TH auth object)
Connection (wraps a TH client object (after we've done the auth) we've done auth UserList)
ChannelManager ( wraps a ConversationList)
TextChannel (wraps a TH conversation object)

Plan of attack:
 - make two demo apps
 - merge together
 - mainloop problem can be solved with https://bitbucket.org/a_ba/gbulb
 see  also http://stackoverflow.com/questions/26675297/asyncio-calls-running-in-gtk-main-loop

Task 0.1:
(Tp side)
 - create a CM that can be seen in KTp DONE
 - send/receive a hello world DONE
 - show a hardcoded roster DONE

(Hangups side)
 - create a client object, log in,   DONE
 - get event for new chat / new message in chat    DONE


Milestone 0.2:
- connect Using get_auth_stdin + saved cookie file
 - have 1-1 chats working with name in the chat

Milestone 0.3:
 - group chat receive
 - roster, even if using old API as long as it works in KTp

*BLOG*

Milestone 0.4:
 - proper install  + DBus activate
 - set_presence
 - avatars
 - contact caps (hardcode that they can have text channels)

Milestone 0.5:
 - proper auth
 - error handling


*RELEASE*
